package com.ritchey.simple.domain.chapel;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PunchExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table punch
     *
     * @mbggenerated Wed Sep 04 13:33:12 CDT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table punch
     *
     * @mbggenerated Wed Sep 04 13:33:12 CDT 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table punch
     *
     * @mbggenerated Wed Sep 04 13:33:12 CDT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table punch
     *
     * @mbggenerated Wed Sep 04 13:33:12 CDT 2013
     */
    public PunchExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table punch
     *
     * @mbggenerated Wed Sep 04 13:33:12 CDT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table punch
     *
     * @mbggenerated Wed Sep 04 13:33:12 CDT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table punch
     *
     * @mbggenerated Wed Sep 04 13:33:12 CDT 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table punch
     *
     * @mbggenerated Wed Sep 04 13:33:12 CDT 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table punch
     *
     * @mbggenerated Wed Sep 04 13:33:12 CDT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table punch
     *
     * @mbggenerated Wed Sep 04 13:33:12 CDT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table punch
     *
     * @mbggenerated Wed Sep 04 13:33:12 CDT 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table punch
     *
     * @mbggenerated Wed Sep 04 13:33:12 CDT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table punch
     *
     * @mbggenerated Wed Sep 04 13:33:12 CDT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table punch
     *
     * @mbggenerated Wed Sep 04 13:33:12 CDT 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table punch
     *
     * @mbggenerated Wed Sep 04 13:33:12 CDT 2013
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getName());
        sb.append("[");
        sb.append("Hash = ").append(hashCode());
        sb.append(",orderByClause=").append(orderByClause);
        sb.append(",distinct=").append(distinct);
        sb.append(",oredCriteria=").append(oredCriteria);
        sb.append("]");
        return sb.toString();
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table punch
     *
     * @mbggenerated Wed Sep 04 13:33:12 CDT 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPunchtimeIsNull() {
            addCriterion("punchTime is null");
            return (Criteria) this;
        }

        public Criteria andPunchtimeIsNotNull() {
            addCriterion("punchTime is not null");
            return (Criteria) this;
        }

        public Criteria andPunchtimeEqualTo(Date value) {
            addCriterion("punchTime =", value, "punchtime");
            return (Criteria) this;
        }

        public Criteria andPunchtimeNotEqualTo(Date value) {
            addCriterion("punchTime <>", value, "punchtime");
            return (Criteria) this;
        }

        public Criteria andPunchtimeGreaterThan(Date value) {
            addCriterion("punchTime >", value, "punchtime");
            return (Criteria) this;
        }

        public Criteria andPunchtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("punchTime >=", value, "punchtime");
            return (Criteria) this;
        }

        public Criteria andPunchtimeLessThan(Date value) {
            addCriterion("punchTime <", value, "punchtime");
            return (Criteria) this;
        }

        public Criteria andPunchtimeLessThanOrEqualTo(Date value) {
            addCriterion("punchTime <=", value, "punchtime");
            return (Criteria) this;
        }

        public Criteria andPunchtimeIn(List<Date> values) {
            addCriterion("punchTime in", values, "punchtime");
            return (Criteria) this;
        }

        public Criteria andPunchtimeNotIn(List<Date> values) {
            addCriterion("punchTime not in", values, "punchtime");
            return (Criteria) this;
        }

        public Criteria andPunchtimeBetween(Date value1, Date value2) {
            addCriterion("punchTime between", value1, value2, "punchtime");
            return (Criteria) this;
        }

        public Criteria andPunchtimeNotBetween(Date value1, Date value2) {
            addCriterion("punchTime not between", value1, value2, "punchtime");
            return (Criteria) this;
        }

        public Criteria andCampusidIsNull() {
            addCriterion("campusId is null");
            return (Criteria) this;
        }

        public Criteria andCampusidIsNotNull() {
            addCriterion("campusId is not null");
            return (Criteria) this;
        }

        public Criteria andCampusidEqualTo(String value) {
            addCriterion("campusId =", value, "campusid");
            return (Criteria) this;
        }

        public Criteria andCampusidNotEqualTo(String value) {
            addCriterion("campusId <>", value, "campusid");
            return (Criteria) this;
        }

        public Criteria andCampusidGreaterThan(String value) {
            addCriterion("campusId >", value, "campusid");
            return (Criteria) this;
        }

        public Criteria andCampusidGreaterThanOrEqualTo(String value) {
            addCriterion("campusId >=", value, "campusid");
            return (Criteria) this;
        }

        public Criteria andCampusidLessThan(String value) {
            addCriterion("campusId <", value, "campusid");
            return (Criteria) this;
        }

        public Criteria andCampusidLessThanOrEqualTo(String value) {
            addCriterion("campusId <=", value, "campusid");
            return (Criteria) this;
        }

        public Criteria andCampusidLike(String value) {
            addCriterion("campusId like", value, "campusid");
            return (Criteria) this;
        }

        public Criteria andCampusidNotLike(String value) {
            addCriterion("campusId not like", value, "campusid");
            return (Criteria) this;
        }

        public Criteria andCampusidIn(List<String> values) {
            addCriterion("campusId in", values, "campusid");
            return (Criteria) this;
        }

        public Criteria andCampusidNotIn(List<String> values) {
            addCriterion("campusId not in", values, "campusid");
            return (Criteria) this;
        }

        public Criteria andCampusidBetween(String value1, String value2) {
            addCriterion("campusId between", value1, value2, "campusid");
            return (Criteria) this;
        }

        public Criteria andCampusidNotBetween(String value1, String value2) {
            addCriterion("campusId not between", value1, value2, "campusid");
            return (Criteria) this;
        }

        public Criteria andValueIsNull() {
            addCriterion("value is null");
            return (Criteria) this;
        }

        public Criteria andValueIsNotNull() {
            addCriterion("value is not null");
            return (Criteria) this;
        }

        public Criteria andValueEqualTo(Double value) {
            addCriterion("value =", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueNotEqualTo(Double value) {
            addCriterion("value <>", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueGreaterThan(Double value) {
            addCriterion("value >", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueGreaterThanOrEqualTo(Double value) {
            addCriterion("value >=", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueLessThan(Double value) {
            addCriterion("value <", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueLessThanOrEqualTo(Double value) {
            addCriterion("value <=", value, "value");
            return (Criteria) this;
        }

        public Criteria andValueIn(List<Double> values) {
            addCriterion("value in", values, "value");
            return (Criteria) this;
        }

        public Criteria andValueNotIn(List<Double> values) {
            addCriterion("value not in", values, "value");
            return (Criteria) this;
        }

        public Criteria andValueBetween(Double value1, Double value2) {
            addCriterion("value between", value1, value2, "value");
            return (Criteria) this;
        }

        public Criteria andValueNotBetween(Double value1, Double value2) {
            addCriterion("value not between", value1, value2, "value");
            return (Criteria) this;
        }

        public Criteria andEventIsNull() {
            addCriterion("event is null");
            return (Criteria) this;
        }

        public Criteria andEventIsNotNull() {
            addCriterion("event is not null");
            return (Criteria) this;
        }

        public Criteria andEventEqualTo(Integer value) {
            addCriterion("event =", value, "event");
            return (Criteria) this;
        }

        public Criteria andEventNotEqualTo(Integer value) {
            addCriterion("event <>", value, "event");
            return (Criteria) this;
        }

        public Criteria andEventGreaterThan(Integer value) {
            addCriterion("event >", value, "event");
            return (Criteria) this;
        }

        public Criteria andEventGreaterThanOrEqualTo(Integer value) {
            addCriterion("event >=", value, "event");
            return (Criteria) this;
        }

        public Criteria andEventLessThan(Integer value) {
            addCriterion("event <", value, "event");
            return (Criteria) this;
        }

        public Criteria andEventLessThanOrEqualTo(Integer value) {
            addCriterion("event <=", value, "event");
            return (Criteria) this;
        }

        public Criteria andEventIn(List<Integer> values) {
            addCriterion("event in", values, "event");
            return (Criteria) this;
        }

        public Criteria andEventNotIn(List<Integer> values) {
            addCriterion("event not in", values, "event");
            return (Criteria) this;
        }

        public Criteria andEventBetween(Integer value1, Integer value2) {
            addCriterion("event between", value1, value2, "event");
            return (Criteria) this;
        }

        public Criteria andEventNotBetween(Integer value1, Integer value2) {
            addCriterion("event not between", value1, value2, "event");
            return (Criteria) this;
        }

        public Criteria andLoginIsNull() {
            addCriterion("login is null");
            return (Criteria) this;
        }

        public Criteria andLoginIsNotNull() {
            addCriterion("login is not null");
            return (Criteria) this;
        }

        public Criteria andLoginEqualTo(String value) {
            addCriterion("login =", value, "login");
            return (Criteria) this;
        }

        public Criteria andLoginNotEqualTo(String value) {
            addCriterion("login <>", value, "login");
            return (Criteria) this;
        }

        public Criteria andLoginGreaterThan(String value) {
            addCriterion("login >", value, "login");
            return (Criteria) this;
        }

        public Criteria andLoginGreaterThanOrEqualTo(String value) {
            addCriterion("login >=", value, "login");
            return (Criteria) this;
        }

        public Criteria andLoginLessThan(String value) {
            addCriterion("login <", value, "login");
            return (Criteria) this;
        }

        public Criteria andLoginLessThanOrEqualTo(String value) {
            addCriterion("login <=", value, "login");
            return (Criteria) this;
        }

        public Criteria andLoginLike(String value) {
            addCriterion("login like", value, "login");
            return (Criteria) this;
        }

        public Criteria andLoginNotLike(String value) {
            addCriterion("login not like", value, "login");
            return (Criteria) this;
        }

        public Criteria andLoginIn(List<String> values) {
            addCriterion("login in", values, "login");
            return (Criteria) this;
        }

        public Criteria andLoginNotIn(List<String> values) {
            addCriterion("login not in", values, "login");
            return (Criteria) this;
        }

        public Criteria andLoginBetween(String value1, String value2) {
            addCriterion("login between", value1, value2, "login");
            return (Criteria) this;
        }

        public Criteria andLoginNotBetween(String value1, String value2) {
            addCriterion("login not between", value1, value2, "login");
            return (Criteria) this;
        }

        public Criteria andTardyIsNull() {
            addCriterion("tardy is null");
            return (Criteria) this;
        }

        public Criteria andTardyIsNotNull() {
            addCriterion("tardy is not null");
            return (Criteria) this;
        }

        public Criteria andTardyEqualTo(Boolean value) {
            addCriterion("tardy =", value, "tardy");
            return (Criteria) this;
        }

        public Criteria andTardyNotEqualTo(Boolean value) {
            addCriterion("tardy <>", value, "tardy");
            return (Criteria) this;
        }

        public Criteria andTardyGreaterThan(Boolean value) {
            addCriterion("tardy >", value, "tardy");
            return (Criteria) this;
        }

        public Criteria andTardyGreaterThanOrEqualTo(Boolean value) {
            addCriterion("tardy >=", value, "tardy");
            return (Criteria) this;
        }

        public Criteria andTardyLessThan(Boolean value) {
            addCriterion("tardy <", value, "tardy");
            return (Criteria) this;
        }

        public Criteria andTardyLessThanOrEqualTo(Boolean value) {
            addCriterion("tardy <=", value, "tardy");
            return (Criteria) this;
        }

        public Criteria andTardyIn(List<Boolean> values) {
            addCriterion("tardy in", values, "tardy");
            return (Criteria) this;
        }

        public Criteria andTardyNotIn(List<Boolean> values) {
            addCriterion("tardy not in", values, "tardy");
            return (Criteria) this;
        }

        public Criteria andTardyBetween(Boolean value1, Boolean value2) {
            addCriterion("tardy between", value1, value2, "tardy");
            return (Criteria) this;
        }

        public Criteria andTardyNotBetween(Boolean value1, Boolean value2) {
            addCriterion("tardy not between", value1, value2, "tardy");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table punch
     *
     * @mbggenerated do_not_delete_during_merge Wed Sep 04 13:33:12 CDT 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table punch
     *
     * @mbggenerated Wed Sep 04 13:33:12 CDT 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}